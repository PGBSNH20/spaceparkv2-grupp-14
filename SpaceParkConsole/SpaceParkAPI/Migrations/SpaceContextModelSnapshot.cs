// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SpaceParkAPI.Database;

namespace SpaceParkAPI.Migrations
{
    [DbContext(typeof(SpaceContext))]
    partial class SpaceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SpaceParkAPI.Models.Account", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PeopleID")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("PeopleID");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("SpaceParkAPI.Models.Pay", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PaidAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SpacePortID")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartParking")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("SpacePortID");

                    b.ToTable("Pay");
                });

            modelBuilder.Entity("SpaceParkAPI.Models.People", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonalID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("People");
                });

            modelBuilder.Entity("SpaceParkAPI.Models.SpacePort", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Slots")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("SpacePorts");
                });

            modelBuilder.Entity("SpaceParkAPI.Models.Account", b =>
                {
                    b.HasOne("SpaceParkAPI.Models.People", "People")
                        .WithMany()
                        .HasForeignKey("PeopleID");

                    b.Navigation("People");
                });

            modelBuilder.Entity("SpaceParkAPI.Models.Pay", b =>
                {
                    b.HasOne("SpaceParkAPI.Models.SpacePort", "SpacePort")
                        .WithMany()
                        .HasForeignKey("SpacePortID");

                    b.Navigation("SpacePort");
                });
#pragma warning restore 612, 618
        }
    }
}
